generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  password    String
  isAvailable Boolean      @default(true)
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now())      
  RecipeBook  RecipeBook[]
}

model RecipeBook {
  id               Int       @id @default(autoincrement())
  creator          Users?    @relation(fields: [user_id], references: [id])
  user_id          Int?
  recipe_book_name String
  isAvailable      Boolean   @default(true)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now())
  Recipes          Recipes[]
}

model Recipes {
  id             Int            @id @default(autoincrement())
  recipe_book    RecipeBook?    @relation(fields: [recipe_book_id], references: [id])
  recipe_book_id Int?
  category       Categories?    @relation(fields: [category_id], references: [id])
  category_id    Int?
  description    String         @db.VarChar(255)
  photo          String
  isAvailable    Boolean        @default(true)
  created_at     DateTime       @default(now())
  updated_at     DateTime       @default(now())
  Instructions   Instructions[]
  Ingredients    Ingredients[]
}

model Categories {
  id            Int       @id @default(autoincrement())
  category_name String
  isAvailable   Boolean   @default(true)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @default(now())
  Recipes       Recipes[]
}

model Instructions {
  id              Int      @id @default(autoincrement())
  recipe          Recipes? @relation(fields: [recipe_id], references: [id])
  recipe_id       Int
  ingredient_name String
  isAvailable     Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())
}

model Ingredients {
  id           Int      @id @default(autoincrement())
  recipe       Recipes? @relation(fields: [recipe_id], references: [id])
  recipe_id    Int
  instrucction String   @db.VarChar(255)
  isAvailable  Boolean  @default(true)
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
}
